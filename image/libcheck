#!/usr/bin/env python2.7
import os, sys, subprocess, re

if len(sys.argv) <= 1:
	print("Usage: libcheck <FILES>")
	print("Check whether the given executables or shared libraries are linked against non-system libraries.")
	print("")
	print( "By default, these libraries are allowed:")
	print( "$SYSTEM_LIBRARIES")
	print("")
	print( "You can allow more libraries by setting \$LIBCHECK_ALLOW, e.g.:")
	print( "  env LIBCHECK_ALLOW='libcurl|libcrypto' libcheck /usr/bin/foo")
	sys.exit(1)

ARROW = re.compile(" => ")
SYSTEM_LIBRARIES_REGEX = \
	"linux-gate|linux-vdso|libpthread|librt|libdl|libcrypt|libm|libc" + \
	"|ld-linux.*|libutil|libnsl|libgcc_s|libresolv"

if 'LIBCHECK_ALLOW' in os.environ:
	WHITELIST_REGEX = re.compile('(' + SYSTEM_LIBRARIES_REGEX +
		'|' + os.environ['LIBCHECK_ALLOW'] + ')\\.so')
else:
	WHITELIST_REGEX = re.compile('(' + SYSTEM_LIBRARIES_REGEX + ')\\.so')

error = False

for path in sys.argv[1:]:
	ldd = subprocess.check_output(['ldd', path]).split('\n')
	offenders = []
	for line in ldd:
		line = line.strip()
		if len(line) > 0 and not re.search(WHITELIST_REGEX, line):
			if re.search(ARROW, line) is None:
				library = line
			elif re.search('not found', line) is not None:
				library = re.split(ARROW, line, 1)[0]
			else:
				library = re.split(ARROW, line, 1)[1]
			library = re.sub(r' \(.*', '', library)
			offenders.append(library)
			error = True
	if len(offenders) > 0:
		print("%s is linked to non-system libraries: %s" % (path, offenders))

if error:
	sys.exit(1)

